package main.java.tp;

import java.util.ArrayList;
import java.util.List;

public class Biblioteca2 {
    public static void main(String[] args) {
        System.out.println("Gracias por visitar la página de la biblioteca");
    }

    private ArrayList<Libro> libros;
}

class Usuario {
    public String nombre;
    public String email;

    public Usuario(String nombreUsuario, String emailUsuario) {
        this.nombre = nombreUsuario;
        this.email = emailUsuario;
    }

    public String getNombre() {
        return this.nombre;
    }

    public String getEmail() {
        return this.email;
    }
}

class Administrador extends Usuario {
    public Administrador(String nombreAdministrador, String emailAdministrador) {
        super(nombreAdministrador, emailAdministrador);
    }

    //Falta hacer el metodo updateCatalog
}

class Cliente extends Usuario {
    private List<Reserva> reservas;

    public Cliente(String nombreCliente, String emailCliente) {
        super(nombreCliente, emailCliente);
        this.reservas = new ArrayList<>();
    }

    public List<Reserva> getReservas() {
        return reservas;
    }

    public void reservar(Libro libro) {
        Reserva reserva = new Reserva(this, libro); // Crear una nueva reserva asociada al usuario y al libro
        reservas.add(reserva); // Agregar la reserva a la lista de reservas del usuario
    }

    public void devolver(Reserva reserva) {
        reserva.devolver(); // Llamar al método devolver de la reserva
        reservas.remove(reserva); // Eliminar la reserva de la lista de reservas del usuario
    }
}

// Clase Libro que representa un libro en la biblioteca
class Libro {
    private final String titulo;
    private final String autor;
    private int cantidad;
    private final List<Calificacion> calificaciones;

    public Libro(String titulo, String autor, int cantidad) {
        this.titulo = titulo;
        this.autor = autor;
        this.cantidad = cantidad;
        this.calificaciones = new ArrayList<>(); // Lista de calificaciones realizadas para el libro
    }

    public String getTitulo() {
        return titulo;
    }

    public String getAutor() {
        return autor;
    }

    public int getCantidad() {
        return cantidad;
    }

    public List<Calificacion> getCalificaciones() {
        return calificaciones;
    }

    public void prestar() {
        if (cantidad > 0) {
            cantidad--; // Decrementar la cantidad de libros disponibles al prestar uno
        }
    }

    public void devolver() {
        cantidad++; // Incrementar la cantidad de libros disponibles al devolver uno
    }

    public void calificar(Calificacion calificacion) {
        calificaciones.add(calificacion); // Agregar la calificación a la lista de calificaciones del libro
    }
}

// Clase Calificacion que representa una calificación realizada por un usuario para un libro
class Calificacion {
    private final String comentario;
    private final int puntuacion;

    public Calificacion(String comentario, int puntuacion) {
        this.comentario = comentario;
        this.puntuacion = puntuacion;
    }

    public String getComentario() {
        System.out.println("");
        return comentario;
    }

    public int getPuntuacion() {
        System.out.println("");
        return puntuacion;
    }
}

// Enumeración que representa los posibles estados de un libro en la biblioteca
enum Estado {
    DISPONIBLE, PRESTADO, RETRASO
}

// Clase Reserva que representa una reserva realizada por un usuario para un libro
class Reserva {
    private final Cliente cliente;
    private final Libro libro;
    private Estado estado;

    public Reserva(Cliente cliente, Libro libro) {
        this.cliente = cliente;
        this.libro = libro;
        this.estado = Estado.PRESTADO;
        libro.prestar(); // Llamar al método prestar del libro al realizar la reserva
    }

    public Cliente getCliente() {
        return cliente;
    }

    public Libro getLibro() {
        return libro;
    }

    public Estado getEstado() {
        return estado;
    }

    public void devolver() {
        if (estado == Estado.PRESTADO) {
            estado = Estado.DISPONIBLE;
            libro.devolver();
        } else if (estado == Estado.RETRASO) {
            estado = Estado.DISPONIBLE;
            libro.devolver();
            cliente.reservar(libro);
        }
    }

    public void cancelar() {
        if (estado == Estado.PRESTADO) {
            estado = Estado.DISPONIBLE;
            libro.devolver();
        } else if (estado == Estado.RETRASO) {
            estado = Estado.DISPONIBLE;
            libro.devolver();
        }
        cliente.getReservas().remove(this);
    }

    public void calificar(Calificacion calificacion) {
        libro.calificar(calificacion);
        estado = Estado.DISPONIBLE;
    }
}
